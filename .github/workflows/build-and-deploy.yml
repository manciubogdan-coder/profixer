
name: Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Create .htaccess file
        run: |
          cat > ./dist/.htaccess << 'EOL'
          <IfModule mod_rewrite.c>
            RewriteEngine On
            RewriteBase /
            RewriteRule ^index\.html$ - [L]
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteCond %{REQUEST_FILENAME} !-l
            RewriteRule . /index.html [L]
          </IfModule>
          
          # Setarea MIME type-urilor pentru JavaScript
          <FilesMatch "\.js$">
            ForceType text/javascript
          </FilesMatch>
          <FilesMatch "\.mjs$">
            ForceType text/javascript
          </FilesMatch>
          <FilesMatch "\.json$">
            ForceType application/json
          </FilesMatch>
          
          # Backup method for setting MIME types
          AddType text/javascript .js
          AddType text/javascript .mjs
          AddType application/json .json
          
          # Disable MIME type checking for JavaScript modules
          <IfModule mod_headers.c>
            <FilesMatch "\.(js|mjs)$">
              Header set X-Content-Type-Options ""
            </FilesMatch>
          </IfModule>
          EOL
      
      - name: Upload build as artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 7
          
      - name: Deploy to cPanel
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/
          server-dir: /
          dangerous-clean-slate: true

  build-android:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Install Capacitor CLI
        run: npm install -g @capacitor/cli
        
      - name: Add Android platform if needed
        run: npx cap add android || true
        
      - name: Sync Capacitor
        run: npx cap sync android
        
      - name: Build Android APK (Debug)
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew assembleDebug
          
      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 7
          
      # Uncomment once you have keystore setup for signing the release build
      # - name: Build Android APK (Release)
      #   env:
      #     KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      #     KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      #     KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      #   run: |
      #     cd android
      #     ./gradlew assembleRelease
          
      # - name: Upload release APK
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: app-release
      #     path: android/app/build/outputs/apk/release/app-release.apk
      #     retention-days: 7
            
      # - name: Upload to Google Play
      #   uses: r0adkll/upload-google-play@v1
      #   with:
      #     serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
      #     packageName: app.lovable.fe03c270892948ca8215c47fd6d9f416
      #     releaseFiles: android/app/build/outputs/bundle/release/app-release.aab
      #     track: internal
      #     status: completed
      #     inAppUpdatePriority: 3

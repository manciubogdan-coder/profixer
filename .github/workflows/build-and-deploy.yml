
name: Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Create .htaccess file
        run: |
          cat > ./dist/.htaccess << 'EOL'
          <IfModule mod_rewrite.c>
            RewriteEngine On
            RewriteBase /
            RewriteRule ^index\.html$ - [L]
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteCond %{REQUEST_FILENAME} !-l
            RewriteRule . /index.html [L]
          </IfModule>
          
          # Setarea MIME type-urilor pentru JavaScript
          <FilesMatch "\.js$">
            ForceType text/javascript
          </FilesMatch>
          <FilesMatch "\.mjs$">
            ForceType text/javascript
          </FilesMatch>
          <FilesMatch "\.json$">
            ForceType application/json
          </FilesMatch>
          
          # Backup method for setting MIME types
          AddType text/javascript .js
          AddType text/javascript .mjs
          AddType application/json .json
          
          # Disable MIME type checking for JavaScript modules
          <IfModule mod_headers.c>
            <FilesMatch "\.(js|mjs)$">
              Header set X-Content-Type-Options ""
            </FilesMatch>
          </IfModule>
          EOL
      
      - name: Upload build as artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 7
          
      - name: Deploy to cPanel
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/
          server-dir: /
          dangerous-clean-slate: true

  build-android:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # Changed from 'zulu' to 'temurin'
          java-version: '17'       # Explicitly using Java 17 which is more stable for Android builds
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Install Capacitor CLI
        run: npm install -g @capacitor/cli
        
      - name: Add Android platform if needed
        run: npx cap add android || true
        
      - name: Sync Capacitor
        run: npx cap sync android
        
      - name: Update gradle.properties to set Java compatibility
        run: |
          echo "org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8" >> android/gradle.properties
          echo "android.useAndroidX=true" >> android/gradle.properties
          echo "android.enableJetifier=true" >> android/gradle.properties
          
      - name: Update build.gradle compiler settings
        run: |
          # Actualizăm build.gradle principal
          cat > android/build.gradle << EOL
buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.2'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
        flatDir {
            dirs "../capacitor-cordova-android-plugins/src/main/libs", "libs"
        }
    }

    // Set Java compatibility for all projects
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
EOL
          
          # Actualizăm app/build.gradle
          if [ -f "android/app/build.gradle" ]; then
            sed -i '/android {/a compileOptions {\n        sourceCompatibility JavaVersion.VERSION_17\n        targetCompatibility JavaVersion.VERSION_17\n    }' android/app/build.gradle
            sed -i 's/compileSdk .*/compileSdk 33/g' android/app/build.gradle
            sed -i 's/compileSdkVersion .*/compileSdkVersion 33/g' android/app/build.gradle
            sed -i 's/targetSdk .*/targetSdk 33/g' android/app/build.gradle
            sed -i 's/targetSdkVersion .*/targetSdkVersion 33/g' android/app/build.gradle
            sed -i 's/minSdk .*/minSdk 22/g' android/app/build.gradle
            sed -i 's/minSdkVersion .*/minSdkVersion 22/g' android/app/build.gradle
          fi
        
      - name: Build Android APK (Debug)
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew assembleDebug
          
      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 7
